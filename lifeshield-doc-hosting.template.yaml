# Purpose: This stack creates Cloudfront distribution in front of the S3 static site used for the LifeShield Documentation
# This distributions are protected by a Web WAF.
#
# NOTE: Deploy this template on us-east-1 in order to ease with ACM certificate provisioning for the stack
#       But also needs to be provisioned in us-east-1 due to WAF resources for CloudFront
#
AWSTemplateFormatVersion: '2010-09-09'
Description: v0.2.0 CloudFront Web Distributions for LifeShield Documentation
Parameters:
  parEnvironmentDNSDomain:
    Description: Environment DNS Domain for Stack
    Type: String
    Default: docs.icumed-lifeshield.com
  parLogsBucket:
    Description: The S3 bucket where logs (such as FlowLogs and ELBs AccessLogs) are stored
    Type: String
    Default: ""
  parLogsBucketFolder:
    Description: The prefix or subfolder within the bucket logs
    Type: String
    Default: ""
  parPriceClass:
    Description: Choosing the price class for cloudfront
    Type: String
    Default: PriceClass_All

Conditions:
  conEnableLogs: !Not [!Equals [!Ref parLogsBucket, '']]
  conHasLogsBucketFolder: !And
  - !Condition conEnableLogs
  - !Not [!Equals [!Ref parLogsBucketFolder, ""]]

Resources:
  resICUMedDataCentersIPSet:
    Type: AWS::WAFv2::IPSet
    Properties:
      Addresses: 
        # San Diego, CA
        - 12.252.80.216/30
        - 12.0.116.32/29
        # San Diego, CA - Test Network
        - 65.117.179.208/29
        # Chennai, India
        - 115.110.227.208/30
        # Phoenix, AZ - Datacenter - GlobalProtect VPN
        - 69.71.58.128/29
        # Phoenix, AZ - Datacenter - GlobalProtect VPN
        - 38.142.104.8/29
        # Chicago, IL - Datacenter - GlobalProtect VPN
        - 38.140.29.24/29
        # Hong Kong - Datacenter - GlobalProtect VPN
        - 63.217.237.160/30
        # Slough, UK - Datacenter - GlobalProtect VPN
        - 185.83.41.32/29
      Description: IPSet of ICUMedical Datacenters for WAFv2
      IPAddressVersion: IPV4
      Name: 'IPSetICUMedicalDatacenters'
      Scope: CLOUDFRONT
      Tags: 
        - Key: Name
          Value: 'IPSET-ICUMedicalDatacenters'

  resWAFv2WebACL:
    Type: AWS::WAFv2::WebACL
    Properties: 
      DefaultAction: 
        Allow: {}
      Description: WAFv2 Web ACL Rules
      Name: 'LifeShield-Docs-Wafv2-WebACL'
      Rules:
        - Action:
            Block: {}
          Name: FilterRuleOnIPSet
          Priority: 0
          Statement:
            NotStatement:
              Statement:
                IPSetReferenceStatement:
                  Arn: !GetAtt resICUMedDataCentersIPSet.Arn
          VisibilityConfig:
            CloudWatchMetricsEnabled: true
            MetricName: 'LifeShield-Docs-CloudFront-WAFv2-FilterRuleOnIPSet'
            SampledRequestsEnabled: true
      Scope: CLOUDFRONT
      Tags: 
        - Key: Name
          Value: 'LifeShield Documentation WAFv2 Web ACL Rules'
      VisibilityConfig: 
        CloudWatchMetricsEnabled: true
        MetricName: 'LifeShield-Docs-CloudFront-WAFv2-WebACL'
        SampledRequestsEnabled: true

  resDocsIcumedLifeShieldCertificate:
    Type: AWS::CertificateManager::Certificate
    Properties:
      DomainName: 'docs.icumed-lifeshield.com'
      DomainValidationOptions:
      - DomainName: 'docs.icumed-lifeshield.com'
        ValidationDomain: 'docs.icumed-lifeshield.com'
      ValidationMethod: DNS
      Tags:
        - Key: Name
          Value: 'docs.icumed-lifeshield.com'

  resBucketsOriginAccessIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: 'Origin Access Identity for LifeShield Docs'

  # LifeShieldDocs Empty Bucket
  resLifeShieldDocsBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete
    Properties:
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

  resLifeShieldDocsBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref resLifeShieldDocsBucket
      PolicyDocument:
        Statement:
          - Sid: "Policy for CloudFront Origin Identity Access for LifeShield Docs Bucket"
            Action:
              - "s3:GetObject"
            Effect: "Allow"
            Resource: !Sub 'arn:aws:s3:::${resLifeShieldDocsBucket}/*'
            Principal:
              CanonicalUser: !GetAtt resBucketsOriginAccessIdentity.S3CanonicalUserId
          - Sid: BlockNonSSLRequests
            Effect: Deny
            Action: "s3:*"
            Principal: "*"
            Resource: !Sub "arn:aws:s3:::${resLifeShieldDocsBucket}/*"
            Condition:
              Bool:
                "aws:SecureTransport": "false"

  resLifeShieldDocsWebDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Comment: "LifeShield Docs CloudFront Web Distribution"
        Origins:
          # NB: Must use the RegionalDomainName to avoid (307 Temporary Redirect) as it can take up to 24 hours for the bucket name to propagate across all AWS Regions
          #     For more details see https://aws.amazon.com/premiumsupport/knowledge-center/s3-http-307-response/
          - DomainName: !GetAtt resLifeShieldDocsBucket.RegionalDomainName
            Id: !Sub 'S3-${parEnvironmentDNSDomain}'
            S3OriginConfig:
              OriginAccessIdentity: !Sub "origin-access-identity/cloudfront/${resBucketsOriginAccessIdentity}"
        Aliases:
          - !Sub '${parEnvironmentDNSDomain}'
        DefaultCacheBehavior:
          AllowedMethods:
            - GET
            - HEAD
            - OPTIONS
          CachedMethods:
            - GET
            - HEAD
            - OPTIONS
          Compress: 'false'
          DefaultTTL: '30'
          ForwardedValues:
            QueryString: 'false'
            Cookies:
              Forward: none
          MaxTTL: '60'
          MinTTL: '30'
          SmoothStreaming: 'false'
          TargetOriginId: !Sub 'S3-${parEnvironmentDNSDomain}'
          ViewerProtocolPolicy: redirect-to-https
        CustomErrorResponses:
        - ErrorCode: '403'
          ResponsePagePath: "/index.html"
          ResponseCode: '404'
          ErrorCachingMinTTL: '30'
        - ErrorCode: '404'
          ResponsePagePath: "/index.html"
          ResponseCode: '404'
          ErrorCachingMinTTL: '30'
        Enabled: 'true'
        HttpVersion: http2
        DefaultRootObject: index.html
        PriceClass: !Ref parPriceClass
        ViewerCertificate:
          AcmCertificateArn: !Ref resDocsIcumedLifeShieldCertificate
          MinimumProtocolVersion: TLSv1.2_2019
          SslSupportMethod: sni-only
        WebACLId: !GetAtt resWAFv2WebACL.Arn
        Logging: !If
          - conEnableLogs
          - Bucket: !Sub '${parLogsBucket}.s3.amazonaws.com'
            IncludeCookies: 'true'
            Prefix: !If
              - conHasLogsBucketFolder
              - !Sub "${parLogsBucketFolder}/doc/"
              - "doc/"
          - !Ref AWS::NoValue

  resLifeShieldDocsDNSRecordSet:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneName: 'docs.icumed-lifeshield.com.'
      Comment: 'docs.icumed-lifeshield.com'
      Name: 'docs.icumed-lifeshield.com.'
      Type: A
      AliasTarget:
        HostedZoneId: Z2FDTNDATAQYW2
        DNSName: !GetAtt 'resLifeShieldDocsWebDistribution.DomainName'
